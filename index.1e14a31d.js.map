{"mappings":"ACEA,SAAS,gBAAgB,CAAC,mBAAoB,WAYnC,IAAA,EAAT,WACE,IACoB,EADd,EAAW,EAAM,IAAI,CAAC,MAAM,CAC5B,EAAc,AAAA,CAAA,AAAa,OAAb,CAAA,EAAA,EAAM,IAAI,CAAC,EAAE,AAAF,GAAX,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAe,KAAK,CAAC,MAAM,AAAN,GAAU,CAG/C,CAAA,GAAY,EACd,EAAgB,QAAQ,CAAG,CAAA,EAE3B,EAAgB,QAAQ,CAAG,CAAA,EAGzB,GAAY,EACd,EAAgB,QAAQ,CAAG,CAAA,EAE3B,EAAgB,QAAQ,CAAG,CAAA,EAIzB,GAAe,EACjB,EAAmB,QAAQ,CAAG,CAAA,EAE9B,EAAmB,QAAQ,CAAG,CAAA,EAG5B,GAAe,EACjB,EAAmB,QAAQ,CAAG,CAAA,EAE9B,EAAmB,QAAQ,CAAG,CAAA,CAElC,EAxCM,EAAQ,SAAS,aAAa,CAAC,iBAC/B,EAAkB,SAAS,aAAa,CAAC,eACzC,EAAkB,SAAS,aAAa,CAAC,eACzC,EAAqB,SAAS,aAAa,CAAC,kBAC5C,EAAqB,SAAS,aAAa,CAAC,kBAE5C,EAAW,GACX,EAAW,EACX,EAAc,GACd,EAAc,EAkCpB,EAAgB,gBAAgB,CAAC,QAAS,WACxC,IAAM,EAAW,EAAM,IAAI,CAAC,MAAM,CAElC,GAAI,EAAW,EAAU,CAIvB,IAAK,IAHC,EAAS,EAAM,SAAS,GACxB,EAAc,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAErC,EAAI,EAAG,EAAI,EAAa,IAG/B,AAFgB,EAAO,UAAU,GAEzB,WAAW,CAAG,OAA6B,MAAA,CAAtB,EAAW,EAAE,WAAe,MAAA,CAAN,EAAI,GAEzD,GACF,CACF,GAGA,EAAgB,gBAAgB,CAAC,QAAS,WACxC,IAAM,EAAW,EAAM,IAAI,CAAC,MAAM,CAE9B,EAAW,IACb,EAAM,SAAS,CAAC,EAAW,GAC3B,IAEJ,GAGA,EAAmB,gBAAgB,CAAC,QAAS,WAC3C,IAAoB,EAAd,EAAc,AAAA,CAAA,AAAa,OAAb,CAAA,EAAA,EAAM,IAAI,CAAC,EAAE,AAAF,GAAX,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAe,KAAK,CAAC,MAAM,AAAN,GAAU,EAE/C,EAAc,IAChB,MAAM,IAAI,CAAC,EAAM,IAAI,EAAE,OAAO,CAAC,SAAC,CAAA,CAAK,CAArC,EAGE,AAFgB,EAAI,UAAU,GAEtB,WAAW,CAAG,OAA0B,MAAA,CAAnB,EAAQ,EAAE,WAAyB,MAAA,CAAhB,EAAc,EAChE,GACA,IAEJ,GAGA,EAAmB,gBAAgB,CAAC,QAAS,WAC3C,IAAoB,EAAA,CAAA,AAAA,CAAA,AAAa,OAAb,CAAA,EAAA,EAAM,IAAI,CAAC,EAAE,AAAF,GAAX,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAe,KAAK,CAAC,MAAM,AAAN,GAAU,CAAA,EAEjC,IAChB,MAAM,IAAI,CAAC,EAAM,IAAI,EAAE,OAAO,CAAC,SAAC,CAAhC,EACE,EAAI,UAAU,CAAC,EAAI,KAAK,CAAC,MAAM,CAAG,EACpC,GACA,IAEJ,GAGA,GACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var updateButtonState = function updateButtonState() {\n        var _table_rows_;\n        var rowCount = table.rows.length;\n        var columnCount = ((_table_rows_ = table.rows[0]) === null || _table_rows_ === void 0 ? void 0 : _table_rows_.cells.length) || 0;\n        // Update row buttons\n        if (rowCount >= MAX_ROWS) appendRowButton.disabled = true;\n        else appendRowButton.disabled = false;\n        if (rowCount <= MIN_ROWS) removeRowButton.disabled = true;\n        else removeRowButton.disabled = false;\n        // Update column buttons\n        if (columnCount >= MAX_COLUMNS) appendColumnButton.disabled = true;\n        else appendColumnButton.disabled = false;\n        if (columnCount <= MIN_COLUMNS) removeColumnButton.disabled = true;\n        else removeColumnButton.disabled = false;\n    };\n    var table = document.querySelector(\"#growth-table\");\n    var appendRowButton = document.querySelector(\".append-row\");\n    var removeRowButton = document.querySelector(\".remove-row\");\n    var appendColumnButton = document.querySelector(\".append-column\");\n    var removeColumnButton = document.querySelector(\".remove-column\");\n    var MAX_ROWS = 10;\n    var MIN_ROWS = 2;\n    var MAX_COLUMNS = 10;\n    var MIN_COLUMNS = 2;\n    // Add a row to the table\n    appendRowButton.addEventListener(\"click\", function() {\n        var rowCount = table.rows.length;\n        if (rowCount < MAX_ROWS) {\n            var newRow = table.insertRow();\n            var columnCount = table.rows[0].cells.length;\n            for(var i = 0; i < columnCount; i++){\n                var newCell = newRow.insertCell();\n                newCell.textContent = \"Row \".concat(rowCount + 1, \", Cell \").concat(i + 1);\n            }\n            updateButtonState();\n        }\n    });\n    // Remove the last row from the table\n    removeRowButton.addEventListener(\"click\", function() {\n        var rowCount = table.rows.length;\n        if (rowCount > MIN_ROWS) {\n            table.deleteRow(rowCount - 1);\n            updateButtonState();\n        }\n    });\n    // Add a column to the table\n    appendColumnButton.addEventListener(\"click\", function() {\n        var _table_rows_;\n        var columnCount = ((_table_rows_ = table.rows[0]) === null || _table_rows_ === void 0 ? void 0 : _table_rows_.cells.length) || 0;\n        if (columnCount < MAX_COLUMNS) {\n            Array.from(table.rows).forEach(function(row, index) {\n                var newCell = row.insertCell();\n                newCell.textContent = \"Row \".concat(index + 1, \", Cell \").concat(columnCount + 1);\n            });\n            updateButtonState();\n        }\n    });\n    // Remove the last column from the table\n    removeColumnButton.addEventListener(\"click\", function() {\n        var _table_rows_;\n        var columnCount = ((_table_rows_ = table.rows[0]) === null || _table_rows_ === void 0 ? void 0 : _table_rows_.cells.length) || 0;\n        if (columnCount > MIN_COLUMNS) {\n            Array.from(table.rows).forEach(function(row) {\n                row.deleteCell(row.cells.length - 1);\n            });\n            updateButtonState();\n        }\n    });\n    // Initial button state check\n    updateButtonState();\n});\n\n//# sourceMappingURL=index.1e14a31d.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const table = document.querySelector('#growth-table');\n  const appendRowButton = document.querySelector('.append-row');\n  const removeRowButton = document.querySelector('.remove-row');\n  const appendColumnButton = document.querySelector('.append-column');\n  const removeColumnButton = document.querySelector('.remove-column');\n\n  const MAX_ROWS = 10;\n  const MIN_ROWS = 2;\n  const MAX_COLUMNS = 10;\n  const MIN_COLUMNS = 2;\n\n  function updateButtonState() {\n    const rowCount = table.rows.length;\n    const columnCount = table.rows[0]?.cells.length || 0;\n\n    // Update row buttons\n    if (rowCount >= MAX_ROWS) {\n      appendRowButton.disabled = true;\n    } else {\n      appendRowButton.disabled = false;\n    }\n\n    if (rowCount <= MIN_ROWS) {\n      removeRowButton.disabled = true;\n    } else {\n      removeRowButton.disabled = false;\n    }\n\n    // Update column buttons\n    if (columnCount >= MAX_COLUMNS) {\n      appendColumnButton.disabled = true;\n    } else {\n      appendColumnButton.disabled = false;\n    }\n\n    if (columnCount <= MIN_COLUMNS) {\n      removeColumnButton.disabled = true;\n    } else {\n      removeColumnButton.disabled = false;\n    }\n  }\n\n  // Add a row to the table\n  appendRowButton.addEventListener('click', () => {\n    const rowCount = table.rows.length;\n\n    if (rowCount < MAX_ROWS) {\n      const newRow = table.insertRow();\n      const columnCount = table.rows[0].cells.length;\n\n      for (let i = 0; i < columnCount; i++) {\n        const newCell = newRow.insertCell();\n\n        newCell.textContent = `Row ${rowCount + 1}, Cell ${i + 1}`;\n      }\n      updateButtonState();\n    }\n  });\n\n  // Remove the last row from the table\n  removeRowButton.addEventListener('click', () => {\n    const rowCount = table.rows.length;\n\n    if (rowCount > MIN_ROWS) {\n      table.deleteRow(rowCount - 1);\n      updateButtonState();\n    }\n  });\n\n  // Add a column to the table\n  appendColumnButton.addEventListener('click', () => {\n    const columnCount = table.rows[0]?.cells.length || 0;\n\n    if (columnCount < MAX_COLUMNS) {\n      Array.from(table.rows).forEach((row, index) => {\n        const newCell = row.insertCell();\n\n        newCell.textContent = `Row ${index + 1}, Cell ${columnCount + 1}`;\n      });\n      updateButtonState();\n    }\n  });\n\n  // Remove the last column from the table\n  removeColumnButton.addEventListener('click', () => {\n    const columnCount = table.rows[0]?.cells.length || 0;\n\n    if (columnCount > MIN_COLUMNS) {\n      Array.from(table.rows).forEach((row) => {\n        row.deleteCell(row.cells.length - 1);\n      });\n      updateButtonState();\n    }\n  });\n\n  // Initial button state check\n  updateButtonState();\n});\n"],"names":["document","addEventListener","updateButtonState","_table_rows_","rowCount","table","rows","length","columnCount","cells","MAX_ROWS","appendRowButton","disabled","MIN_ROWS","removeRowButton","MAX_COLUMNS","appendColumnButton","MIN_COLUMNS","removeColumnButton","querySelector","newRow","insertRow","i","newCell","insertCell","textContent","concat","deleteRow","Array","from","forEach","row","index","deleteCell"],"version":3,"file":"index.1e14a31d.js.map"}